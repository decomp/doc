@inproceedings{milner_algorithmw,
  title={Principal type-schemes for functional programs},
  author={Damas, Luis and Milner, Robin},
  booktitle={Proceedings of the 9th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
  pages={207--212},
  year={1982},
  organization={ACM}
}

@inproceedings{mycroft_type_based_decompilation,
  title={Type-based decompilation (or program reconstruction via type reconstruction)},
  author={Mycroft, Alan},
  booktitle={European Symposium on Programming},
  pages={208--223},
  year={1999},
  organization={Springer}
}

@inproceedings{mycroft_comparing_type_based_and_proof_directed_decompilation,
  title={Comparing type-based and proof-directed decompilation},
  author={Mycroft, Alan and Ohori, Atsushi and Katsumata, Shin-ya},
  booktitle={Reverse Engineering, 2001. Proceedings. Eighth Working Conference on},
  pages={362--367},
  year={2001},
  organization={IEEE}
}

@article{tie_reverse_engineering_of_types,
  title={TIE: Principled reverse engineering of types in binary programs},
  author={Lee, JongHyup and Avgerinos, Thanassis and Brumley, David},
  year={2011},
  publisher={Internet Society}
}

@article{second_write_scalable_type_detection,
  title={Scalable variable and data type detection in a binary rewriter},
  author={ElWazeer, Khaled and Anand, Kapil and Kotha, Aparna and Smithson, Matthew and Barua, Rajeev},
  journal={ACM SIGPLAN Notices},
  volume={48},
  number={6},
  pages={51--60},
  year={2013},
  publisher={ACM}
}

@phdthesis{bintype,
  title={BinType: A Scalable Type Inference Tool for Compiled C Programs},
  author={Mondal, Briti Sundar},
  year={2016},
  school={Concordia University}
}

@article{type_inference_on_executables,
  title={Type inference on executables},
  author={Caballero, Juan and Lin, Zhiqiang},
  journal={ACM Computing Surveys (CSUR)},
  volume={48},
  number={4},
  pages={65},
  year={2016},
  publisher={ACM}
}

@inproceedings{dynstruct,
  title={dynStruct: An automatic reverse engineering tool for structure recovery and memory use analysis},
  author={Mercier, Daniel and Chawdhary, Aziem and Jones, Richard},
  booktitle={Software Analysis, Evolution and Reengineering (SANER), 2017 IEEE 24th International Conference on},
  pages={497--501},
  year={2017},
  organization={IEEE}
}

@inproceedings{polymorphic_type_inference_for_machine_code,
  title={Polymorphic type inference for machine code},
  author={Noonan, Matt and Loginov, Alexey and Cok, David},
  booktitle={ACM SIGPLAN Notices},
  volume={51},
  number={6},
  pages={27--41},
  year={2016},
  organization={ACM}
}

@online{ada_static_analysis_and_compiler_inconsistencies,
  author={Yannick Moy},
  title={How Our Compiler Learnt From Our Analyzers},
  year={2015},
  month={May},
  day={22},
  url={https://blog.adacore.com/how-our-compiler-learnt-from-our-analyzers},
  urldate={2018-05-17}
}

@article{trusting_trust,
  title={Reflections on Trusting Trust},
  author={Thompson, Ken},
  journal={Communications of the ACM},
  volume={27},
  number={8},
  pages={761--763},
  year={1984},
  publisher={ACM}
}

@article{wysinwyx,
  title={WYSINWYX: What you see is not what you eXecute},
  author={Balakrishnan, Gogul and Reps, Thomas},
  journal={ACM Transactions on Programming Languages and Systems (TOPLAS)},
  volume={32},
  number={6},
  pages={23},
  year={2010},
  publisher={ACM}
}
